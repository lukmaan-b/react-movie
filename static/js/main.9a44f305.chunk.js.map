{"version":3,"sources":["api.js","useFetch.js","components/SingleMovie.js","components/MovieList.js","App.js","index.js"],"names":["Config","useFetch","url","useState","data","setData","useEffect","a","fetch","res","json","results","container","hidden","y","opacity","visible","SingleMovie","movies","currentMovie","setCurrentMovie","id","useParams","find","el","className","div","variants","initial","animate","x","transition","delay","title","Date","release_date","toLocaleDateString","p","overview","img","src","poster_path","alt","srcset","show","staggerChildren","item","whileHover","scale","MovieList","section","map","to","App","moveList","basename","process","exact","path","exitBeforeEnter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a44f305.chunk.js","sourcesContent":["export const Config = {\r\n  API_KEY: '66b4b207972af13e9722f237764e36a0',\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(url);\r\n      const { results } = await res.json();\r\n      setData(results);\r\n    })();\r\n  }, [url]);\r\n\r\n  return data;\r\n};\r\n\r\nexport default useFetch;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst container = {\r\n  hidden: {\r\n    y: 100,\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    y: 0,\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst SingleMovie = ({ movies }) => {\r\n  const [currentMovie, setCurrentMovie] = useState(null);\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    if (movies) {\r\n      setCurrentMovie(movies.find((el) => el.id == id));\r\n    }\r\n  }, [id, movies]);\r\n  return currentMovie ? (\r\n    <div\r\n      className=\"backdrop\"\r\n      // style={{\r\n      //   backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${currentMovie.backdrop_path})`,\r\n      // }}\r\n    >\r\n      <motion.div\r\n        variants={container}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        className=\"movie__card\"\r\n      >\r\n        <motion.div\r\n          initial={{ x: -50, opacity: 0 }}\r\n          animate={{ x: 0, opacity: 1 }}\r\n          transition={{ delay: 0.5 }}\r\n          className=\"movie__title-section\"\r\n        >\r\n          <h1>{currentMovie.title}</h1>\r\n          <div className=\"release-date\">\r\n            {new Date(currentMovie.release_date).toLocaleDateString()}\r\n          </div>\r\n        </motion.div>\r\n        <div className=\"movie__description\">\r\n          <motion.p\r\n            initial={{ y: 50, opacity: 0 }}\r\n            animate={{ y: 0, opacity: 1 }}\r\n            transition={{ delay: 0.7 }}\r\n          >\r\n            {currentMovie.overview}\r\n          </motion.p>\r\n          <motion.img\r\n            initial={{ x: 50, opacity: 0 }}\r\n            animate={{ x: 0, opacity: 1 }}\r\n            transition={{ delay: 1 }}\r\n            className=\"movie__poster\"\r\n            src={`https://image.tmdb.org/t/p/w200${currentMovie.poster_path}`}\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default SingleMovie;\r\n","import { motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst container = {\r\n  hidden: { opacity: 0 },\r\n  show: {\r\n    opacity: 1,\r\n\r\n    transition: {\r\n      staggerChildren: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\nconst item = {\r\n  hidden: { opacity: 0, y: 50 },\r\n  whileHover: { scale: 1.2 },\r\n  show: { opacity: 1, y: 0 },\r\n};\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <main>\r\n      <h1>Movies</h1>\r\n      <motion.section\r\n        variants={container}\r\n        initial=\"hidden\"\r\n        animate=\"show\"\r\n        className=\"grid\"\r\n      >\r\n        {movies &&\r\n          movies.map(({ id, title, poster_path }) => (\r\n            <motion.div\r\n              whileHover={{ scale: 1.1 }}\r\n              variants={item}\r\n              className=\"card\"\r\n            >\r\n              <Link className=\"link\" to={`movies/${id}`}>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w200${poster_path}`}\r\n                  alt=\"\"\r\n                />\r\n              </Link>\r\n            </motion.div>\r\n          ))}\r\n      </motion.section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import { Config } from './api';\nimport useFetch from './useFetch';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SingleMovie from './components/SingleMovie';\nimport MovieList from './components/MovieList';\nimport { AnimatePresence } from 'framer-motion';\nimport './App.css';\nfunction App() {\n  const moveList = useFetch(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${Config.API_KEY}`\n  );\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <AnimatePresence exitBeforeEnter>\n            <MovieList movies={moveList} />\n          </AnimatePresence>\n        </Route>\n        <Route path=\"/movies/:id\">\n          <AnimatePresence exitBeforeEnter>\n            <SingleMovie movies={moveList} />\n          </AnimatePresence>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}